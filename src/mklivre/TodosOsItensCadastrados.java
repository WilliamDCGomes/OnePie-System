/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package mklivre;

import java.awt.Image;
import java.awt.Toolkit;
import java.net.URL;
import javax.swing.JOptionPane;
import java.sql.*;
import controle.ModuloConexao;
import java.awt.Desktop;
import java.net.URI;
import javax.swing.ImageIcon;
/**
 *
 * @author willi
 */
public class TodosOsItensCadastrados extends javax.swing.JFrame {
    Connection conexao = null;
    PreparedStatement pst = null;
    ResultSet rs = null;
    /** Creates new form TodosOsItensCadastrados */
    public TodosOsItensCadastrados() {
        initComponents();
        editarItemCadastrado.requestFocus();
        URL caminhoIcone = getClass().getResource("/mklivre/icone/icone2.png");
        Image iconeTitulo = Toolkit.getDefaultToolkit().getImage(caminhoIcone);
        this.setIconImage(iconeTitulo);
        varEditar1.setVisible(false);
        varEditar2.setVisible(false);
        varBaixar1.setVisible(false);
        varBaixar2.setVisible(false);
        varApagar1.setVisible(false);
        varApagar2.setVisible(false);
        varRequisitar1.setVisible(false);
        varRequisitar2.setVisible(false);
        varAtivar1.setVisible(false);
        varAtivar2.setVisible(false);
        varPausar1.setVisible(false);
        varPausar2.setVisible(false);
        conexao = ModuloConexao.conector();
        itemPausado.setVisible(false);
        cadastroObservacoes.setWrapStyleWord(true);
        NovoItem.requestFocus();
        varNovo1.setVisible(false);
        varNovo2.setVisible(false);
        jLabel36.setVisible(false);
    }
    int nivel;
    String acesso;
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel10 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        varNovo1 = new javax.swing.JLabel();
        varNovo2 = new javax.swing.JLabel();
        NovoItem = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        itemPausado = new javax.swing.JLabel();
        varPausar2 = new javax.swing.JLabel();
        varPausar1 = new javax.swing.JLabel();
        varAtivar2 = new javax.swing.JLabel();
        varAtivar1 = new javax.swing.JLabel();
        varRequisitar2 = new javax.swing.JLabel();
        varRequisitar1 = new javax.swing.JLabel();
        varApagar2 = new javax.swing.JLabel();
        varApagar1 = new javax.swing.JLabel();
        varBaixar1 = new javax.swing.JLabel();
        varBaixar2 = new javax.swing.JLabel();
        varEditar1 = new javax.swing.JLabel();
        varEditar2 = new javax.swing.JLabel();
        linkImagem = new javax.swing.JLabel();
        baixarItemCadastrado = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        editarItemCadastrado = new javax.swing.JButton();
        ativar = new javax.swing.JButton();
        pause = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        requisitar = new javax.swing.JButton();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        apagarItemCadastrado = new javax.swing.JButton();
        quantCadastrada = new javax.swing.JTextField();
        custoCadastrado = new javax.swing.JTextField();
        precoDeVenda = new javax.swing.JTextField();
        lucroCadastrado = new javax.swing.JTextField();
        localizacaoCadastrada = new javax.swing.JTextField();
        marcaCadastrada = new javax.swing.JTextField();
        caixaLocalizada = new javax.swing.JTextField();
        codigoCadastrado = new javax.swing.JTextField();
        nomePeca = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        cadastroObservacoes = new javax.swing.JTextArea();
        jLabel34 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        ativoeinativo = new javax.swing.JLabel();
        mostrarNivel = new javax.swing.JLabel();
        acessoUser = new javax.swing.JLabel();
        vindoDoEspera = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        link = new javax.swing.JLabel();
        imagemlink = new javax.swing.JLabel();

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/RS.png"))); // NOI18N

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/RS.png"))); // NOI18N

        jLabel17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/RS.png"))); // NOI18N

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("ITENS CADASTRADOS");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });
        getContentPane().setLayout(null);

        jLabel36.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/MER-LIVRE.png"))); // NOI18N
        jLabel36.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel36MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel36);
        jLabel36.setBounds(687, 5, 70, 75);

        varNovo1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/faixa-cinza-5.png"))); // NOI18N
        getContentPane().add(varNovo1);
        varNovo1.setBounds(40, 330, 120, 40);

        varNovo2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/faixa-cinza-5.png"))); // NOI18N
        getContentPane().add(varNovo2);
        varNovo2.setBounds(40, 330, 120, 40);

        NovoItem.setBackground(new java.awt.Color(0, 0, 0));
        NovoItem.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        NovoItem.setForeground(new java.awt.Color(255, 255, 255));
        NovoItem.setText("NOVO");
        NovoItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NovoItemActionPerformed(evt);
            }
        });
        NovoItem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                NovoItemKeyPressed(evt);
            }
        });
        getContentPane().add(NovoItem);
        NovoItem.setBounds(40, 330, 120, 40);

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/novo.png"))); // NOI18N
        getContentPane().add(jLabel7);
        jLabel7.setBounds(130, 300, 80, 70);

        itemPausado.setFont(new java.awt.Font("Tahoma", 1, 21)); // NOI18N
        itemPausado.setForeground(new java.awt.Color(255, 0, 0));
        itemPausado.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        itemPausado.setText("(PAUSADO)");
        getContentPane().add(itemPausado);
        itemPausado.setBounds(500, 10, 140, 60);

        varPausar2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/faixa-cinza-5.png"))); // NOI18N
        getContentPane().add(varPausar2);
        varPausar2.setBounds(400, 570, 120, 40);

        varPausar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/faixa-cinza-5.png"))); // NOI18N
        getContentPane().add(varPausar1);
        varPausar1.setBounds(400, 570, 120, 40);

        varAtivar2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/faixa-cinza-5.png"))); // NOI18N
        getContentPane().add(varAtivar2);
        varAtivar2.setBounds(240, 570, 120, 40);

        varAtivar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/faixa-cinza-5.png"))); // NOI18N
        getContentPane().add(varAtivar1);
        varAtivar1.setBounds(240, 570, 120, 40);

        varRequisitar2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/faixa-cinza-5.png"))); // NOI18N
        getContentPane().add(varRequisitar2);
        varRequisitar2.setBounds(560, 570, 150, 40);

        varRequisitar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/faixa-cinza-5.png"))); // NOI18N
        getContentPane().add(varRequisitar1);
        varRequisitar1.setBounds(560, 570, 150, 40);

        varApagar2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/faixa-cinza-5.png"))); // NOI18N
        getContentPane().add(varApagar2);
        varApagar2.setBounds(40, 490, 120, 40);

        varApagar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/faixa-cinza-5.png"))); // NOI18N
        getContentPane().add(varApagar1);
        varApagar1.setBounds(40, 490, 120, 40);

        varBaixar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/faixa-cinza-5.png"))); // NOI18N
        getContentPane().add(varBaixar1);
        varBaixar1.setBounds(40, 570, 120, 40);

        varBaixar2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/faixa-cinza-5.png"))); // NOI18N
        getContentPane().add(varBaixar2);
        varBaixar2.setBounds(40, 570, 120, 40);

        varEditar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/faixa-cinza-5.png"))); // NOI18N
        getContentPane().add(varEditar1);
        varEditar1.setBounds(40, 410, 120, 40);

        varEditar2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/faixa-cinza-5.png"))); // NOI18N
        getContentPane().add(varEditar2);
        varEditar2.setBounds(40, 410, 120, 40);

        linkImagem.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        linkImagem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/Sem título.png"))); // NOI18N
        linkImagem.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        linkImagem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                linkImagemMouseClicked(evt);
            }
        });
        getContentPane().add(linkImagem);
        linkImagem.setBounds(0, 10, 150, 70);

        baixarItemCadastrado.setBackground(new java.awt.Color(0, 0, 0));
        baixarItemCadastrado.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        baixarItemCadastrado.setForeground(new java.awt.Color(255, 255, 255));
        baixarItemCadastrado.setText("BAIXAR");
        baixarItemCadastrado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                baixarItemCadastradoActionPerformed(evt);
            }
        });
        baixarItemCadastrado.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                baixarItemCadastradoKeyPressed(evt);
            }
        });
        getContentPane().add(baixarItemCadastrado);
        baixarItemCadastrado.setBounds(40, 570, 120, 40);

        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/FUNDO AMARELO.jpg"))); // NOI18N
        getContentPane().add(jLabel16);
        jLabel16.setBounds(570, 82, 5, 138);

        editarItemCadastrado.setBackground(new java.awt.Color(0, 0, 0));
        editarItemCadastrado.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        editarItemCadastrado.setForeground(new java.awt.Color(255, 255, 255));
        editarItemCadastrado.setText("EDITAR");
        editarItemCadastrado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarItemCadastradoActionPerformed(evt);
            }
        });
        editarItemCadastrado.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                editarItemCadastradoKeyPressed(evt);
            }
        });
        getContentPane().add(editarItemCadastrado);
        editarItemCadastrado.setBounds(40, 410, 120, 40);

        ativar.setBackground(new java.awt.Color(0, 0, 0));
        ativar.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        ativar.setForeground(new java.awt.Color(255, 255, 255));
        ativar.setText("ATIVAR");
        ativar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ativarActionPerformed(evt);
            }
        });
        ativar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                ativarKeyPressed(evt);
            }
        });
        getContentPane().add(ativar);
        ativar.setBounds(240, 570, 120, 40);

        pause.setBackground(new java.awt.Color(0, 0, 0));
        pause.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        pause.setForeground(new java.awt.Color(255, 255, 255));
        pause.setText("PAUSAR");
        pause.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pauseActionPerformed(evt);
            }
        });
        pause.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                pauseKeyPressed(evt);
            }
        });
        getContentPane().add(pause);
        pause.setBounds(400, 570, 120, 40);

        jLabel15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/FUNDO AMARELO.jpg"))); // NOI18N
        getContentPane().add(jLabel15);
        jLabel15.setBounds(390, 82, 5, 138);

        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/FUNDO AMARELO.jpg"))); // NOI18N
        getContentPane().add(jLabel13);
        jLabel13.setBounds(220, 300, 5, 310);

        requisitar.setBackground(new java.awt.Color(0, 0, 0));
        requisitar.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        requisitar.setForeground(new java.awt.Color(255, 255, 255));
        requisitar.setText("REQUISITAR");
        requisitar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                requisitarActionPerformed(evt);
            }
        });
        requisitar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                requisitarKeyPressed(evt);
            }
        });
        getContentPane().add(requisitar);
        requisitar.setBounds(560, 570, 150, 40);

        jLabel28.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/FUNDO AMARELO.jpg"))); // NOI18N
        getContentPane().add(jLabel28);
        jLabel28.setBounds(840, 500, 5, 340);

        jLabel29.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel29.setForeground(new java.awt.Color(255, 255, 255));
        jLabel29.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel29.setText("CAIXA");
        getContentPane().add(jLabel29);
        jLabel29.setBounds(600, 160, 130, 17);

        jLabel30.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel30.setForeground(new java.awt.Color(255, 255, 255));
        jLabel30.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel30.setText("OBSERVAÇÕES");
        getContentPane().add(jLabel30);
        jLabel30.setBounds(420, 230, 170, 17);

        jLabel31.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel31.setForeground(new java.awt.Color(255, 255, 255));
        jLabel31.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel31.setText("MARCA");
        getContentPane().add(jLabel31);
        jLabel31.setBounds(440, 90, 90, 17);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/EDIT.png"))); // NOI18N
        getContentPane().add(jLabel2);
        jLabel2.setBounds(130, 380, 80, 70);

        jLabel23.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(255, 255, 255));
        jLabel23.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel23.setText("QUANTIDADE");
        getContentPane().add(jLabel23);
        jLabel23.setBounds(600, 90, 130, 17);

        jLabel26.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/FUNDO AMARELO.jpg"))); // NOI18N
        getContentPane().add(jLabel26);
        jLabel26.setBounds(220, 85, 5, 380);

        jLabel22.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(255, 255, 255));
        jLabel22.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel22.setText("PREÇO DE VENDA");
        getContentPane().add(jLabel22);
        jLabel22.setBounds(10, 160, 200, 17);

        apagarItemCadastrado.setBackground(new java.awt.Color(0, 0, 0));
        apagarItemCadastrado.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        apagarItemCadastrado.setForeground(new java.awt.Color(255, 255, 255));
        apagarItemCadastrado.setText("APAGAR");
        apagarItemCadastrado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                apagarItemCadastradoActionPerformed(evt);
            }
        });
        apagarItemCadastrado.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                apagarItemCadastradoKeyPressed(evt);
            }
        });
        getContentPane().add(apagarItemCadastrado);
        apagarItemCadastrado.setBounds(40, 490, 120, 40);

        quantCadastrada.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        quantCadastrada.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        getContentPane().add(quantCadastrada);
        quantCadastrada.setBounds(590, 120, 160, 30);

        custoCadastrado.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        custoCadastrado.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        getContentPane().add(custoCadastrado);
        custoCadastrado.setBounds(240, 190, 140, 30);

        precoDeVenda.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        precoDeVenda.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        getContentPane().add(precoDeVenda);
        precoDeVenda.setBounds(10, 190, 200, 30);

        lucroCadastrado.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lucroCadastrado.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        getContentPane().add(lucroCadastrado);
        lucroCadastrado.setBounds(410, 190, 150, 30);

        localizacaoCadastrada.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        localizacaoCadastrada.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        getContentPane().add(localizacaoCadastrada);
        localizacaoCadastrada.setBounds(10, 260, 200, 30);

        marcaCadastrada.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        marcaCadastrada.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        getContentPane().add(marcaCadastrada);
        marcaCadastrada.setBounds(410, 120, 150, 30);

        caixaLocalizada.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        caixaLocalizada.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        getContentPane().add(caixaLocalizada);
        caixaLocalizada.setBounds(590, 190, 160, 30);

        codigoCadastrado.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        codigoCadastrado.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        getContentPane().add(codigoCadastrado);
        codigoCadastrado.setBounds(240, 120, 140, 30);

        nomePeca.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        nomePeca.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        getContentPane().add(nomePeca);
        nomePeca.setBounds(10, 120, 200, 30);

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/APAGAR.png"))); // NOI18N
        getContentPane().add(jLabel5);
        jLabel5.setBounds(130, 460, 80, 70);

        jLabel21.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(255, 255, 255));
        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel21.setText("CUSTO");
        jLabel21.setPreferredSize(null);
        getContentPane().add(jLabel21);
        jLabel21.setBounds(250, 160, 120, 17);

        jLabel24.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(255, 255, 255));
        jLabel24.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel24.setText("LUCRO");
        getContentPane().add(jLabel24);
        jLabel24.setBounds(450, 160, 70, 20);

        jLabel20.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(255, 255, 255));
        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel20.setText("CÓDIGO");
        getContentPane().add(jLabel20);
        jLabel20.setBounds(260, 90, 100, 17);

        jLabel32.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel32.setForeground(new java.awt.Color(255, 255, 255));
        jLabel32.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel32.setText("LOCALIZAÇÃO");
        getContentPane().add(jLabel32);
        jLabel32.setBounds(20, 230, 170, 17);

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/REQUISITA2.png"))); // NOI18N
        getContentPane().add(jLabel8);
        jLabel8.setBounds(680, 540, 70, 70);

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 255, 255));
        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel19.setText("NOME");
        getContentPane().add(jLabel19);
        jLabel19.setBounds(50, 90, 120, 17);

        cadastroObservacoes.setColumns(20);
        cadastroObservacoes.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cadastroObservacoes.setRows(5);
        cadastroObservacoes.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cadastroObservacoesKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(cadastroObservacoes);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(240, 260, 510, 270);

        jLabel34.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/BAIXAR ISSO AE.png"))); // NOI18N
        getContentPane().add(jLabel34);
        jLabel34.setBounds(130, 540, 70, 70);

        jLabel37.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/desligar.png"))); // NOI18N
        getContentPane().add(jLabel37);
        jLabel37.setBounds(490, 540, 70, 70);

        jLabel35.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/ligar.png"))); // NOI18N
        getContentPane().add(jLabel35);
        jLabel35.setBounds(330, 540, 70, 70);

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 21)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setText("ITEM CADASTRADO");
        getContentPane().add(jLabel14);
        jLabel14.setBounds(230, 10, 340, 60);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/fundo preto.png"))); // NOI18N
        jLabel1.setMinimumSize(new java.awt.Dimension(1057, 340));
        jLabel1.setPreferredSize(new java.awt.Dimension(1057, 350));
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, 4, 900, 77);

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/FUNDO AMARELO.jpg"))); // NOI18N
        getContentPane().add(jLabel11);
        jLabel11.setBounds(0, -331, 880, 430);

        jLabel25.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/RS.png"))); // NOI18N
        getContentPane().add(jLabel25);
        jLabel25.setBounds(240, 20, 570, 550);

        jLabel18.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/RS.png"))); // NOI18N
        getContentPane().add(jLabel18);
        jLabel18.setBounds(250, 210, 570, 640);

        jLabel27.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/RS.png"))); // NOI18N
        getContentPane().add(jLabel27);
        jLabel27.setBounds(0, 170, 570, 640);

        jLabel33.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/RS.png"))); // NOI18N
        getContentPane().add(jLabel33);
        jLabel33.setBounds(0, 10, 570, 640);

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("jLabel4");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(320, 320, 34, 15);

        ativoeinativo.setText("jLabel7");
        getContentPane().add(ativoeinativo);
        ativoeinativo.setBounds(610, 320, 34, 15);

        mostrarNivel.setBackground(new java.awt.Color(0, 0, 0));
        mostrarNivel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        mostrarNivel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        mostrarNivel.setText("5");
        getContentPane().add(mostrarNivel);
        mostrarNivel.setBounds(280, 380, 50, 70);

        acessoUser.setBackground(new java.awt.Color(0, 0, 0));
        acessoUser.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        acessoUser.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        acessoUser.setText("ADMIN");
        getContentPane().add(acessoUser);
        acessoUser.setBounds(330, 390, 70, 60);

        vindoDoEspera.setText("0");
        getContentPane().add(vindoDoEspera);
        vindoDoEspera.setBounds(640, 80, 6, 15);

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/BAIXAR.png"))); // NOI18N
        getContentPane().add(jLabel9);
        jLabel9.setBounds(330, 580, 70, 70);
        getContentPane().add(link);
        link.setBounds(360, 140, 0, 0);
        getContentPane().add(imagemlink);
        imagemlink.setBounds(500, 60, 0, 0);

        setSize(new java.awt.Dimension(764, 654));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    private void consultarES(){
        String sqlnome = "select * from tb_pecas_es2 where CÓDIGO=?";
        try {
            pst = conexao.prepareStatement(sqlnome);
            pst.setString(1,codigoCadastrado.getText());
            rs = pst.executeQuery();
            if (rs.next()) {
                custoCadastrado.setText(rs.getString(7).replace(".",","));
                precoDeVenda.setText(rs.getString(8).replace(".",","));
                lucroCadastrado.setText(rs.getString(13).replace(".",","));
                cadastroObservacoes.setText(rs.getString(9));
                imagemlink.setText(rs.getString("IMAGEMLINK"));
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null,e);
        }
    }
    private void consultarML(){
        String sqlnome = "select * from tb_pecas_ml2 where CÓDIGO=?";
        try {
            pst = conexao.prepareStatement(sqlnome);
            pst.setString(1,codigoCadastrado.getText());
            rs = pst.executeQuery();
            if (rs.next()) {
                custoCadastrado.setText(rs.getString(3).replace(".",","));
                precoDeVenda.setText(rs.getString(4).replace(".",","));
                lucroCadastrado.setText(rs.getString(16).replace(".",","));
                cadastroObservacoes.setText(rs.getString(10));
                localizacaoCadastrada.setText(rs.getString("LOCALIZAÇÃO"));
                link.setText(rs.getString("LINK"));
                imagemlink.setText(rs.getString("IMAGEMLINK"));
                caixaLocalizada.setText("");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null,e);
        }
    }
    private void pausar(){
        String sql = "update tb_pecas_ml2 set PAUSADO=? where CÓDIGO=?";
        try {
            pst=conexao.prepareStatement(sql);
            pst.setString(1,"SIM");
            pst.setString(2,codigoCadastrado.getText());
            pst.executeUpdate();
            itemPausado.setVisible(true);
            JOptionPane.showMessageDialog(null,"ITEM PAUSADO COM SUCESSO");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null,e);
        }
    }
    private void ativar(){
        String sql = "update tb_pecas_ml2 set PAUSADO=? where CÓDIGO=?";
        try {
            pst=conexao.prepareStatement(sql);
            pst.setString(1,"NÃO");
            pst.setString(2,codigoCadastrado.getText());
            pst.executeUpdate();
            itemPausado.setVisible(false);
            JOptionPane.showMessageDialog(null,"ITEM ATIVADO COM SUCESSO");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null,e);
        }
    }
    private void pegar(){
        String sqlnome = "select * from tb_pecas_ml2 where CÓDIGO=?";
        try {
            pst = conexao.prepareStatement(sqlnome);
            pst.setString(1,codigoCadastrado.getText());
            rs = pst.executeQuery();
            if (rs.next()) {
                jLabel4.setText(rs.getString(17));
                ativoeinativo.setText(rs.getString(12));
                nomePeca.setText(rs.getString(1));
                codigoCadastrado.setText(rs.getString(2));
                marcaCadastrada.setText(rs.getString(5));
                quantCadastrada.setText(rs.getString(7));
                custoCadastrado.setText(rs.getString(3).replace(".",","));
                precoDeVenda.setText(rs.getString(4).replace(".",","));
                lucroCadastrado.setText(rs.getString(16).replace(".",","));
                localizacaoCadastrada.setText(rs.getString(11));
                cadastroObservacoes.setText(rs.getString(10));
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null,e);
        }
    }
    private void removerML(){
        int confirma = JOptionPane.showConfirmDialog(null, "TEM CERTEZA QUE DESEJA APAGAR ESSE ITEM?","ATENÇÃO",JOptionPane.YES_NO_OPTION);
        if(confirma==JOptionPane.YES_OPTION){
            String sql = "delete from tb_pecas_ml2 where CÓDIGO = ?";
            try {
                pst=conexao.prepareStatement(sql);
                pst.setString(1, codigoCadastrado.getText());
                int apagado = pst.executeUpdate();
                if(apagado>0){
                    JOptionPane.showMessageDialog(null,"ITEM APAGADO COM SUCESSO");
                    this.dispose();
                }
                else{
                    if(nivel==5){
                        String sql2 = "delete from tb_pecas_es2 where CÓDIGO = ?";
                        try {
                            pst=conexao.prepareStatement(sql2);
                            pst.setString(1, codigoCadastrado.getText());
                            int apagado2 = pst.executeUpdate();
                            if(apagado2>0){
                                JOptionPane.showMessageDialog(null,"ITEM APAGADO COM SUCESSO");
                                this.dispose();
                            }
                            else{
                                JOptionPane.showMessageDialog(null,"ITEM NÃO EXISTE NO BANCO DE DADOS");
                            }
                        } catch (Exception e) {
                            JOptionPane.showMessageDialog(null, e);
                        }
                    }
                    else{
                      JOptionPane.showMessageDialog(null,"ITEM NÃO EXISTE NO BANCO DE DADOS DO MERCADO LIVRE!\nProcure alguém do estoque para apagar esse item");
                    }
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }
        }
    }
    private void removerES(){
        int confirma = JOptionPane.showConfirmDialog(null, "TEM CERTEZA QUE DESEJA APAGAR ESSE ITEM?","ATENÇÃO",JOptionPane.YES_NO_OPTION);
        if(confirma==JOptionPane.YES_OPTION){
            String sql = "delete from tb_pecas_es2 where CÓDIGO = ?";
            try {
                pst=conexao.prepareStatement(sql);
                pst.setString(1, codigoCadastrado.getText());
                int apagado = pst.executeUpdate();
                if(apagado>0){
                    JOptionPane.showMessageDialog(null,"ITEM APAGADO COM SUCESSO");
                    this.dispose();
                }
                else{
                    if(nivel==5){
                        String sql2 = "delete from tb_pecas_ml2 where CÓDIGO = ?";
                        try {
                            pst=conexao.prepareStatement(sql2);
                            pst.setString(1, codigoCadastrado.getText());
                            int apagado2 = pst.executeUpdate();
                            if(apagado2>0){
                                JOptionPane.showMessageDialog(null,"ITEM APAGADO COM SUCESSO");
                                this.dispose();
                            }
                            else{
                                JOptionPane.showMessageDialog(null,"ITEM NÃO EXISTE NO BANCO DE DADOS");
                            }
                        } catch (Exception e) {
                            JOptionPane.showMessageDialog(null, e);
                        }
                    }
                    else{
                        JOptionPane.showMessageDialog(null,"ITEM NÃO EXISTE NO BANCO DE DADOS DO ESTOQUE\nProcure alguém do mercado livre para apagar esse item");
                    }
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }
        }
    }
    private void editarItemCadastradoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarItemCadastradoActionPerformed
        if(nivel==1||acesso.equals("OF")){
            JOptionPane.showMessageDialog(null, "VOCÊ NÃO TEM ACESSO A ESSE MÓDULO!");
        }
        else{
            MlOuEsAtualizar editar = new MlOuEsAtualizar();
            editar.setVisible(true);
            editar.mostrarNivel.setText(mostrarNivel.getText());
            editar.acessoUser.setText(acessoUser.getText());
            editar.nomePeca.setText(nomePeca.getText());
            editar.codigoCadastrado.setText(codigoCadastrado.getText());
            editar.marcaCadastrada.setText(marcaCadastrada.getText());
            editar.quantCadastrada.setText(quantCadastrada.getText());
            editar.custoCadastrado.setText(custoCadastrado.getText());
            editar.precoDeVenda.setText(precoDeVenda.getText());
            editar.lucroCadastrado.setText(lucroCadastrado.getText());
            editar.caixaLocalizada.setText(caixaLocalizada.getText());
            editar.localizacaoCadastrada.setText(localizacaoCadastrada.getText());
            editar.cadastroObservacoes.setText(cadastroObservacoes.getText());
            this.dispose();
        }

    }//GEN-LAST:event_editarItemCadastradoActionPerformed

    private void baixarItemCadastradoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_baixarItemCadastradoActionPerformed
        if(nivel==1||acesso.equals("OF")){
            JOptionPane.showMessageDialog(null, "VOCÊ NÃO TEM ACESSO A ESSE MÓDULO!");
        }
        else if(acesso.equals("ES")&&nivel!=5){
            JOptionPane.showMessageDialog(null, "VOCÊ NÃO TEM ACESSO A ESSE MÓDULO!\nEsse campo é exclusivo para o mercado livre, utilize o controle de estoque do sistema EURUS!");
        }
        else if(caixaLocalizada.getText().equals("")){
            EstoqueBaixarDoEstoque baixar = new EstoqueBaixarDoEstoque();
            baixar.setVisible(true);
            baixar.mostrarNivel.setText(mostrarNivel.getText());
            baixar.acessoUser.setText(acessoUser.getText());
            baixar.codigoCadastrado.setText(codigoCadastrado.getText());
        }
        else if(acesso.equals("ML")){
            JOptionPane.showMessageDialog(null, "VOCÊ NÃO PODE BAIXAR UM ITEM DO ESTOQUE!");
        }
    }//GEN-LAST:event_baixarItemCadastradoActionPerformed

    private void apagarItemCadastradoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_apagarItemCadastradoActionPerformed
        if(nivel==1||acesso.equals("OF")){
            JOptionPane.showMessageDialog(null, "VOCÊ NÃO TEM ACESSO A ESSE MÓDULO!");
        }
        else if(nivel==2){
            JOptionPane.showMessageDialog(null, "VOCÊ NÃO TEM ACESSO A ESSE MÓDULO!");
        }
        else if(acesso.equals("ES")||nivel==5){
            removerES();
        }
        else if(acesso.equals("ML")||nivel==5){
            removerML();
        }
    }//GEN-LAST:event_apagarItemCadastradoActionPerformed

    private void editarItemCadastradoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_editarItemCadastradoKeyPressed
        if(evt.getKeyCode() == evt.VK_ENTER){
            if(nivel==1||acesso.equals("OF")){
                JOptionPane.showMessageDialog(null, "VOCÊ NÃO TEM ACESSO A ESSE MÓDULO!");
            }
            else{
                MlOuEsAtualizar editar = new MlOuEsAtualizar();
                editar.setVisible(true);
                editar.mostrarNivel.setText(mostrarNivel.getText());
                editar.acessoUser.setText(acessoUser.getText());
                editar.nomePeca.setText(nomePeca.getText());
                editar.codigoCadastrado.setText(codigoCadastrado.getText());
                editar.marcaCadastrada.setText(marcaCadastrada.getText());
                editar.quantCadastrada.setText(quantCadastrada.getText());
                editar.custoCadastrado.setText(custoCadastrado.getText());
                editar.precoDeVenda.setText(precoDeVenda.getText());
                editar.lucroCadastrado.setText(lucroCadastrado.getText());
                editar.caixaLocalizada.setText(caixaLocalizada.getText());
                editar.localizacaoCadastrada.setText(localizacaoCadastrada.getText());
                this.dispose();
            }
        }
    }//GEN-LAST:event_editarItemCadastradoKeyPressed

    private void baixarItemCadastradoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_baixarItemCadastradoKeyPressed
         if(evt.getKeyCode() == evt.VK_ENTER){
            if(nivel==1||acesso.equals("OF")){
                JOptionPane.showMessageDialog(null, "VOCÊ NÃO TEM ACESSO A ESSE MÓDULO!");
            }
            else if(acesso.equals("ES")&&nivel!=5){
                JOptionPane.showMessageDialog(null, "VOCÊ NÃO TEM ACESSO A ESSE MÓDULO!\nEsse campo é exclusivo para o mercado livre, utilize o controle de estoque do sistema EURUS!");
            }
            else if(caixaLocalizada.getText().equals("")){
                EstoqueBaixarDoEstoque baixar = new EstoqueBaixarDoEstoque();
                baixar.setVisible(true);
                baixar.mostrarNivel.setText(mostrarNivel.getText());
                baixar.acessoUser.setText(acessoUser.getText());
                baixar.codigoCadastrado.setText(codigoCadastrado.getText());
            }
            else if(acesso.equals("ML")){
                JOptionPane.showMessageDialog(null, "VOCÊ NÃO PODE BAIXAR UM ITEM DO ESTOQUE!");
            }
         }
    }//GEN-LAST:event_baixarItemCadastradoKeyPressed

    private void apagarItemCadastradoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_apagarItemCadastradoKeyPressed
         if(evt.getKeyCode() == evt.VK_ENTER){
            if(nivel==1||acesso.equals("OF")){
                JOptionPane.showMessageDialog(null, "VOCÊ NÃO TEM ACESSO A ESSE MÓDULO!");
            }
            else if(nivel==2){
                JOptionPane.showMessageDialog(null, "VOCÊ NÃO TEM ACESSO A ESSE MÓDULO!");
            }
            else if(acesso.equals("ES")&&nivel!=5){
                removerES();
            }
            else if(acesso.equals("ML")&&nivel!=5){
                removerML();
            }
         }
    }//GEN-LAST:event_apagarItemCadastradoKeyPressed

    private void requisitarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_requisitarActionPerformed
        if(nivel==1||acesso.equals("OF")){
            JOptionPane.showMessageDialog(null, "VOCÊ NÃO TEM ACESSO A ESSE MÓDULO!");
        }
        else if(nivel==2){
            JOptionPane.showMessageDialog(null, "VOCÊ NÃO TEM ACESSO A ESSE MÓDULO!");
        }
        else if(acesso.equals("ES")&&nivel!=5){
            JOptionPane.showMessageDialog(null, "VOCÊ NÃO TEM ACESSO A ESSE MÓDULO!\nEsse campo é exclusivo para o mercado livre, utilize o controle de estoque do sistema EURUS!");
        }
        else if(caixaLocalizada.getText().equals("")){
            Requisitar reqs = new Requisitar();
            reqs.setVisible(true);
            reqs.mostrarNivel.setText(mostrarNivel.getText());
            reqs.acessoUser.setText(acessoUser.getText());
            reqs.codigoCadastrado.setText(codigoCadastrado.getText());
            if(jLabel4.getText().equals("SIM")){
                reqs.opcSim.setSelected(true);
            }
            else if(jLabel4.getText().equals("NÃO")){
                reqs.opcNao.setSelected(true);
            }
        }
        else if(acesso.equals("ML")){
            JOptionPane.showMessageDialog(null, "VOCÊ NÃO PODE REQUISITAR UM ITEM DO ESTOQUE!");
        }
    }//GEN-LAST:event_requisitarActionPerformed

    private void requisitarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_requisitarKeyPressed
        if(evt.getKeyCode() == evt.VK_ENTER){
            if(nivel==1||acesso.equals("OF")){
                JOptionPane.showMessageDialog(null, "VOCÊ NÃO TEM ACESSO A ESSE MÓDULO!");
            }
            else if(nivel==2){
                JOptionPane.showMessageDialog(null, "VOCÊ NÃO TEM ACESSO A ESSE MÓDULO!");
            }
            else if(acesso.equals("ES")&&nivel!=5){
                JOptionPane.showMessageDialog(null, "VOCÊ NÃO TEM ACESSO A ESSE MÓDULO!\nEsse campo é exclusivo para o mercado livre, utilize o controle de estoque do sistema EURUS!");
            }
            else if(caixaLocalizada.getText().equals("")){
                Requisitar reqs = new Requisitar();
                reqs.setVisible(true);
                reqs.mostrarNivel.setText(mostrarNivel.getText());
                reqs.acessoUser.setText(acessoUser.getText());
                reqs.codigoCadastrado.setText(codigoCadastrado.getText());
                if(jLabel4.getText().equals("SIM")){
                    reqs.opcSim.setSelected(true);
                }
                else if(jLabel4.getText().equals("NÃO")){
                    reqs.opcNao.setSelected(true);
                }
            }
            else if(acesso.equals("ML")){
                JOptionPane.showMessageDialog(null, "VOCÊ NÃO PODE REQUISITAR UM ITEM DO ESTOQUE!");
            }
        }
    }//GEN-LAST:event_requisitarKeyPressed

    private void pauseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pauseActionPerformed
        if(nivel==1||acesso.equals("OF")){
            JOptionPane.showMessageDialog(null, "VOCÊ NÃO TEM ACESSO A ESSE MÓDULO!");
        }
        else if(nivel==2){
            JOptionPane.showMessageDialog(null, "VOCÊ NÃO TEM ACESSO A ESSE MÓDULO!");
        }
        else if(acesso.equals("ES")&&nivel!=5){
            JOptionPane.showMessageDialog(null, "VOCÊ NÃO TEM ACESSO A ESSE MÓDULO!");
        }
        else if(caixaLocalizada.getText().equals("")){
            if(ativoeinativo.getText().equals("SIM")){
                JOptionPane.showMessageDialog(null, "ESSE ITEM JÁ ESTÁ MARCADO COMO INATIVO!");
            }
            else{
                int confirma = JOptionPane.showConfirmDialog(null, "DESEJA MARCAR ESSE ITEM COMO INATIVO NO MERCADO LIVRE?","ATENÇÃO",JOptionPane.YES_NO_OPTION);
                if(confirma==JOptionPane.YES_OPTION){
                    pausar();
                }
            }
        }
        else if(acesso.equals("ML")&&nivel!=2){
            JOptionPane.showMessageDialog(null, "VOCÊ NÃO PODE PAUSAR UM ITEM DO ESTOQUE!");
        }
    }//GEN-LAST:event_pauseActionPerformed

    private void pauseKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pauseKeyPressed
         if(evt.getKeyCode() == evt.VK_ENTER){
            if(nivel==1||acesso.equals("OF")){
                JOptionPane.showMessageDialog(null, "VOCÊ NÃO TEM ACESSO A ESSE MÓDULO!");
            }
            else if(nivel==2){
                JOptionPane.showMessageDialog(null, "VOCÊ NÃO TEM ACESSO A ESSE MÓDULO!");
            }
            else if(acesso.equals("ES")&&nivel!=5){
                JOptionPane.showMessageDialog(null, "VOCÊ NÃO TEM ACESSO A ESSE MÓDULO!");
            }
            else if(caixaLocalizada.getText().equals("")){
                if(ativoeinativo.getText().equals("SIM")){
                    JOptionPane.showMessageDialog(null, "ESSE ITEM JÁ ESTÁ MARCADO COMO INATIVO!");
                }
                else{
                    int confirma = JOptionPane.showConfirmDialog(null, "DESEJA MARCAR ESSE ITEM COMO INATIVO NO MERCADO LIVRE?","ATENÇÃO",JOptionPane.YES_NO_OPTION);
                    if(confirma==JOptionPane.YES_OPTION){
                        pausar();
                    }
                }
            }
            else if(acesso.equals("ML")&&nivel!=2){
                JOptionPane.showMessageDialog(null, "VOCÊ NÃO PODE PAUSAR UM ITEM DO ESTOQUE!");
            }
         }
    }//GEN-LAST:event_pauseKeyPressed

    private void ativarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ativarActionPerformed
        if(nivel==1||acesso.equals("OF")){
            JOptionPane.showMessageDialog(null, "VOCÊ NÃO TEM ACESSO A ESSE MÓDULO!");
        }
        else if(nivel==2){
            JOptionPane.showMessageDialog(null, "VOCÊ NÃO TEM ACESSO A ESSE MÓDULO!");
        }
        else if(acesso.equals("ES")&&nivel!=5){
            JOptionPane.showMessageDialog(null, "VOCÊ NÃO TEM ACESSO A ESSE MÓDULO!");
        }
        else if(caixaLocalizada.getText().equals("")){
            if(ativoeinativo.getText().equals("NÃO")){
                JOptionPane.showMessageDialog(null, "ESSE ITEM JÁ ESTÁ MARCADO COMO ATIVO!");
            }
            else{
                int confirma = JOptionPane.showConfirmDialog(null, "DESEJA MARCAR ESSE ITEM COMO ATIVO NO MERCADO LIVRE?","ATENÇÃO",JOptionPane.YES_NO_OPTION);
                if(confirma==JOptionPane.YES_OPTION){
                    ativar();
                } 
            }
        }
        else if(acesso.equals("ML")&&nivel!=2){
            JOptionPane.showMessageDialog(null, "VOCÊ NÃO PODE ATIVAR UM ITEM DO ESTOQUE!");
        }
    }//GEN-LAST:event_ativarActionPerformed

    private void ativarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ativarKeyPressed
         if(evt.getKeyCode() == evt.VK_ENTER){
            if(nivel==1||acesso.equals("OF")){
                JOptionPane.showMessageDialog(null, "VOCÊ NÃO TEM ACESSO A ESSE MÓDULO!");
            }
            else if(nivel==2){
                JOptionPane.showMessageDialog(null, "VOCÊ NÃO TEM ACESSO A ESSE MÓDULO!");
            }
            else if(acesso.equals("ES")&&nivel!=5){
                JOptionPane.showMessageDialog(null, "VOCÊ NÃO TEM ACESSO A ESSE MÓDULO!");
            }
            else if(caixaLocalizada.getText().equals("")){
                if(ativoeinativo.getText().equals("NÃO")){
                    JOptionPane.showMessageDialog(null, "ESSE ITEM JÁ ESTÁ MARCADO COMO ATIVO!");
                }
                else{
                    int confirma = JOptionPane.showConfirmDialog(null, "DESEJA MARCAR ESSE ITEM COMO ATIVO NO MERCADO LIVRE?","ATENÇÃO",JOptionPane.YES_NO_OPTION);
                    if(confirma==JOptionPane.YES_OPTION){
                        ativar();
                    } 
                }
            }
            else if(acesso.equals("ML")&&nivel!=2){
                JOptionPane.showMessageDialog(null, "VOCÊ NÃO PODE ATIVAR UM ITEM DO ESTOQUE!");
            }
         }
    }//GEN-LAST:event_ativarKeyPressed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        nivel=Integer.parseInt(mostrarNivel.getText());
        acesso=acessoUser.getText();
        if(acesso.equals("AT")||(acesso.equals("OF")&&nivel!=5)){
            varNovo1.setVisible(true);
            varNovo2.setVisible(true);
        }
        if(caixaLocalizada.getText().equals("")){
            
        }
        else if(acesso.equals("ML")){
            varAtivar1.setVisible(true);
            varAtivar2.setVisible(true);
            varPausar1.setVisible(true);
            varPausar2.setVisible(true);
            varRequisitar1.setVisible(true);
            varRequisitar2.setVisible(true);
            varBaixar1.setVisible(true);
            varBaixar2.setVisible(true);
            itemPausado.setVisible(false);
        }
        if(acesso.equals("ES")&&nivel!=5){
            varBaixar1.setVisible(true);
            varBaixar2.setVisible(true);
            varRequisitar1.setVisible(true);
            varRequisitar2.setVisible(true);
            varAtivar1.setVisible(true);
            varAtivar2.setVisible(true);
            varPausar1.setVisible(true);
            varPausar2.setVisible(true);
            itemPausado.setVisible(false);
        }
        if(nivel==1||acesso.equals("OF")){
            varEditar1.setVisible(true);
            varEditar2.setVisible(true);
            varBaixar1.setVisible(true);
            varBaixar2.setVisible(true);
            varApagar1.setVisible(true);
            varApagar2.setVisible(true);
            varRequisitar1.setVisible(true);
            varRequisitar2.setVisible(true);
            varAtivar1.setVisible(true);
            varAtivar2.setVisible(true);
            varPausar1.setVisible(true);
            varPausar2.setVisible(true);
        }
        else if(nivel==2){
            varApagar1.setVisible(true);
            varApagar2.setVisible(true);
            varRequisitar1.setVisible(true);
            varRequisitar2.setVisible(true);
            varAtivar1.setVisible(true);
            varAtivar2.setVisible(true);
            varPausar1.setVisible(true);
            varPausar2.setVisible(true);
        }
        pegar();
        if(ativoeinativo.getText().equals("SIM")){
            itemPausado.setVisible(true);
        }
        cadastroObservacoes.setWrapStyleWord(true);
        
        if(acessoUser.getText().equals("ES")&&Integer.parseInt(vindoDoEspera.getText())==0){
            consultarES();
        }
        else if(acessoUser.getText().equals("ML")&&Integer.parseInt(vindoDoEspera.getText())==0){
            consultarML();
        }
        else if(Integer.parseInt(vindoDoEspera.getText())==1){
            consultarML();
        }
        else if(Integer.parseInt(vindoDoEspera.getText())==2){
            consultarES();
        }
        if(caixaLocalizada.getText().equals("")){
            jLabel36.setVisible(true);
        }
        if(imagemlink.getText().equals("")){
            System.out.println("sidsdsdsds");
        }
        else{
            ImageIcon imagen = new ImageIcon(imagemlink.getText());
            linkImagem.setIcon(new ImageIcon(imagen.getImage().getScaledInstance(linkImagem.getWidth(), linkImagem.getHeight(), Image.SCALE_DEFAULT)));
        }
    }//GEN-LAST:event_formWindowActivated

    private void cadastroObservacoesKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cadastroObservacoesKeyPressed
        
    }//GEN-LAST:event_cadastroObservacoesKeyPressed

    private void NovoItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NovoItemActionPerformed
        if(acesso.equals("AT")||(acesso.equals("OF")&&nivel!=5)){
            JOptionPane.showMessageDialog(null,"VOCÊ NÃO TEM PERMIÇÃO PARA CADASTRAR UM NOVO ITEM!");
        }
        else{
            MlOuEs mloues = new MlOuEs();
            mloues.setVisible(true); 
            mloues.mostrarNivel.setText(mostrarNivel.getText());
            mloues.acessoUser.setText(acessoUser.getText());
            this.dispose();
        }
    }//GEN-LAST:event_NovoItemActionPerformed

    private void NovoItemKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_NovoItemKeyPressed
        if(evt.getKeyCode() == evt.VK_ENTER){
            if(acesso.equals("AT")||(acesso.equals("OF")&&nivel!=5)){
                JOptionPane.showMessageDialog(null,"VOCÊ NÃO TEM PERMIÇÃO PARA CADASTRAR UM NOVO ITEM!");
            }
            else{
                MlOuEs mloues = new MlOuEs();
                mloues.setVisible(true); 
                mloues.mostrarNivel.setText(mostrarNivel.getText());
                mloues.acessoUser.setText(acessoUser.getText());
                this.dispose();
            }
        }
    }//GEN-LAST:event_NovoItemKeyPressed

    private void linkImagemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_linkImagemMouseClicked
        AdicionarImagem add = new AdicionarImagem();
        add.setVisible(true);
        add.mostrarNivel.setText(mostrarNivel.getText());
        add.acessoUser.setText(acessoUser.getText());
        if(caixaLocalizada.getText().equals("")){
            add.mloues.setText("ML");
        }
        else{
            add.mloues.setText("ES");
        }
        add.codigo.setText(codigoCadastrado.getText());
    }//GEN-LAST:event_linkImagemMouseClicked

    private void jLabel36MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel36MouseClicked
        try {
            URI ml = new URI(link.getText());
            Desktop.getDesktop().browse(ml);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "NENHUM LINK CADASTRADO!");
        }
    }//GEN-LAST:event_jLabel36MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TodosOsItensCadastrados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TodosOsItensCadastrados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TodosOsItensCadastrados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TodosOsItensCadastrados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TodosOsItensCadastrados().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton NovoItem;
    public static javax.swing.JLabel acessoUser;
    private javax.swing.JButton apagarItemCadastrado;
    private javax.swing.JButton ativar;
    private javax.swing.JLabel ativoeinativo;
    private javax.swing.JButton baixarItemCadastrado;
    public static javax.swing.JTextArea cadastroObservacoes;
    public static javax.swing.JTextField caixaLocalizada;
    public static javax.swing.JTextField codigoCadastrado;
    public static javax.swing.JTextField custoCadastrado;
    private javax.swing.JButton editarItemCadastrado;
    public static javax.swing.JLabel imagemlink;
    private javax.swing.JLabel itemPausado;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel link;
    private javax.swing.JLabel linkImagem;
    public static javax.swing.JTextField localizacaoCadastrada;
    public static javax.swing.JTextField lucroCadastrado;
    public static javax.swing.JTextField marcaCadastrada;
    public static javax.swing.JLabel mostrarNivel;
    public static javax.swing.JTextField nomePeca;
    private javax.swing.JButton pause;
    public static javax.swing.JTextField precoDeVenda;
    public static javax.swing.JTextField quantCadastrada;
    private javax.swing.JButton requisitar;
    public javax.swing.JLabel varApagar1;
    public javax.swing.JLabel varApagar2;
    public javax.swing.JLabel varAtivar1;
    public javax.swing.JLabel varAtivar2;
    public javax.swing.JLabel varBaixar1;
    public javax.swing.JLabel varBaixar2;
    public javax.swing.JLabel varEditar1;
    public javax.swing.JLabel varEditar2;
    public javax.swing.JLabel varNovo1;
    public javax.swing.JLabel varNovo2;
    public javax.swing.JLabel varPausar1;
    public javax.swing.JLabel varPausar2;
    public javax.swing.JLabel varRequisitar1;
    public javax.swing.JLabel varRequisitar2;
    public static javax.swing.JLabel vindoDoEspera;
    // End of variables declaration//GEN-END:variables

}
