/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mklivre;

import java.awt.Image;
import java.awt.Toolkit;
import java.net.URL;
import javax.swing.JOptionPane;
import java.sql.*;
import controle.ModuloConexao;
import net.proteanit.sql.DbUtils;
/**
 *
 * @author willi
 */
public class TodasAsExecucoes extends javax.swing.JFrame {
    Connection conexao = null;
    PreparedStatement pst = null;
    ResultSet rs = null;
    /**
     * Creates new form TodasAsExecucoes
     */
    public TodasAsExecucoes() {
        initComponents();
        URL caminhoIcone = getClass().getResource("/mklivre/icone/icone2.png");
        Image iconeTitulo = Toolkit.getDefaultToolkit().getImage(caminhoIcone);
        this.setIconImage(iconeTitulo);
        conexao = ModuloConexao.conector();
    }
    int nivel,y=0;
    String acesso="admin",nome;
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        quantNormalSemConserto = new javax.swing.JLabel();
        quantGarantiaSemConserto = new javax.swing.JLabel();
        quantGarantiaInternaSemConserto = new javax.swing.JLabel();
        quantNormalOrcamento = new javax.swing.JLabel();
        quantGarantiaOrcamento = new javax.swing.JLabel();
        quantGarantiaInternaOrcamento = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        servicos = new javax.swing.JComboBox<>();
        quantGarantiaInternaExecutado = new javax.swing.JLabel();
        quantGarantiaExecutado = new javax.swing.JLabel();
        quantNormalExecutado = new javax.swing.JLabel();
        dataMes2 = new javax.swing.JSpinner();
        dataDia2 = new javax.swing.JSpinner();
        jLabel39 = new javax.swing.JLabel();
        dataDia1 = new javax.swing.JSpinner();
        jLabel37 = new javax.swing.JLabel();
        dataMes1 = new javax.swing.JSpinner();
        dataAno1 = new javax.swing.JSpinner();
        jLabel6 = new javax.swing.JLabel();
        campoMecanicos = new javax.swing.JComboBox<>();
        botaoEntrarIniciall = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabelaDePecas = new javax.swing.JTable();
        jLabel51 = new javax.swing.JLabel();
        jLabel52 = new javax.swing.JLabel();
        jLabel53 = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        jLabel45 = new javax.swing.JLabel();
        jLabel49 = new javax.swing.JLabel();
        jLabel50 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        jLabel47 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        jLabel54 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel55 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel48 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        acessoUser = new javax.swing.JLabel();
        mostrarNivel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("EXECUÇÕES");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });
        getContentPane().setLayout(null);

        quantNormalSemConserto.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        quantNormalSemConserto.setForeground(new java.awt.Color(255, 255, 255));
        quantNormalSemConserto.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        quantNormalSemConserto.setText("0");
        getContentPane().add(quantNormalSemConserto);
        quantNormalSemConserto.setBounds(290, 600, 50, 40);

        quantGarantiaSemConserto.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        quantGarantiaSemConserto.setForeground(new java.awt.Color(255, 255, 255));
        quantGarantiaSemConserto.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        quantGarantiaSemConserto.setText("0");
        getContentPane().add(quantGarantiaSemConserto);
        quantGarantiaSemConserto.setBounds(510, 600, 50, 40);

        quantGarantiaInternaSemConserto.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        quantGarantiaInternaSemConserto.setForeground(new java.awt.Color(255, 255, 255));
        quantGarantiaInternaSemConserto.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        quantGarantiaInternaSemConserto.setText("0");
        getContentPane().add(quantGarantiaInternaSemConserto);
        quantGarantiaInternaSemConserto.setBounds(720, 600, 50, 40);

        quantNormalOrcamento.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        quantNormalOrcamento.setForeground(new java.awt.Color(255, 255, 255));
        quantNormalOrcamento.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        quantNormalOrcamento.setText("0");
        getContentPane().add(quantNormalOrcamento);
        quantNormalOrcamento.setBounds(270, 580, 50, 40);

        quantGarantiaOrcamento.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        quantGarantiaOrcamento.setForeground(new java.awt.Color(255, 255, 255));
        quantGarantiaOrcamento.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        quantGarantiaOrcamento.setText("0");
        getContentPane().add(quantGarantiaOrcamento);
        quantGarantiaOrcamento.setBounds(490, 580, 50, 40);

        quantGarantiaInternaOrcamento.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        quantGarantiaInternaOrcamento.setForeground(new java.awt.Color(255, 255, 255));
        quantGarantiaInternaOrcamento.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        quantGarantiaInternaOrcamento.setText("0");
        getContentPane().add(quantGarantiaInternaOrcamento);
        quantGarantiaInternaOrcamento.setBounds(700, 580, 50, 40);

        jLabel15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/FUNDO AMARELO.jpg"))); // NOI18N
        getContentPane().add(jLabel15);
        jLabel15.setBounds(340, 550, 5, 80);

        servicos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "TODOS", "NORMAL", "GARANTIA", "GARANTIA INTERNA" }));
        servicos.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                servicosItemStateChanged(evt);
            }
        });
        servicos.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
                servicosCaretPositionChanged(evt);
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
            }
        });
        servicos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                servicosKeyPressed(evt);
            }
        });
        getContentPane().add(servicos);
        servicos.setBounds(10, 556, 130, 40);

        quantGarantiaInternaExecutado.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        quantGarantiaInternaExecutado.setForeground(new java.awt.Color(255, 255, 255));
        quantGarantiaInternaExecutado.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        quantGarantiaInternaExecutado.setText("0");
        getContentPane().add(quantGarantiaInternaExecutado);
        quantGarantiaInternaExecutado.setBounds(690, 560, 50, 40);

        quantGarantiaExecutado.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        quantGarantiaExecutado.setForeground(new java.awt.Color(255, 255, 255));
        quantGarantiaExecutado.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        quantGarantiaExecutado.setText("0");
        getContentPane().add(quantGarantiaExecutado);
        quantGarantiaExecutado.setBounds(480, 560, 50, 40);

        quantNormalExecutado.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        quantNormalExecutado.setForeground(new java.awt.Color(255, 255, 255));
        quantNormalExecutado.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        quantNormalExecutado.setText("0");
        getContentPane().add(quantNormalExecutado);
        quantNormalExecutado.setBounds(260, 560, 50, 40);

        dataMes2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        dataMes2.setModel(new javax.swing.SpinnerNumberModel(1, 1, 12, 1));
        dataMes2.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                dataMes2StateChanged(evt);
            }
        });
        dataMes2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                dataMes2KeyPressed(evt);
            }
        });
        getContentPane().add(dataMes2);
        dataMes2.setBounds(400, 490, 60, 40);

        dataDia2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        dataDia2.setModel(new javax.swing.SpinnerNumberModel(1, 1, 31, 1));
        dataDia2.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                dataDia2StateChanged(evt);
            }
        });
        dataDia2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                dataDia2KeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                dataDia2KeyTyped(evt);
            }
        });
        getContentPane().add(dataDia2);
        dataDia2.setBounds(330, 490, 60, 40);

        jLabel39.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel39.setForeground(new java.awt.Color(255, 255, 255));
        jLabel39.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel39.setText("/");
        getContentPane().add(jLabel39);
        jLabel39.setBounds(380, 490, 30, 40);

        dataDia1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        dataDia1.setModel(new javax.swing.SpinnerNumberModel(1, 1, 31, 1));
        dataDia1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                dataDia1StateChanged(evt);
            }
        });
        dataDia1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                dataDia1KeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                dataDia1KeyTyped(evt);
            }
        });
        getContentPane().add(dataDia1);
        dataDia1.setBounds(160, 490, 60, 40);

        jLabel37.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel37.setForeground(new java.awt.Color(255, 255, 255));
        jLabel37.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel37.setText("/");
        getContentPane().add(jLabel37);
        jLabel37.setBounds(210, 490, 30, 40);

        dataMes1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        dataMes1.setModel(new javax.swing.SpinnerNumberModel(1, 1, 12, 1));
        dataMes1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                dataMes1StateChanged(evt);
            }
        });
        dataMes1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                dataMes1KeyPressed(evt);
            }
        });
        getContentPane().add(dataMes1);
        dataMes1.setBounds(230, 490, 60, 40);

        dataAno1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        dataAno1.setModel(new javax.swing.SpinnerNumberModel(1, 1, 999, 1));
        dataAno1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                dataAno1StateChanged(evt);
            }
        });
        dataAno1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                dataAno1KeyPressed(evt);
            }
        });
        getContentPane().add(dataAno1);
        dataAno1.setBounds(530, 490, 60, 40);

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/Sem título.png"))); // NOI18N
        jLabel6.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        getContentPane().add(jLabel6);
        jLabel6.setBounds(0, 0, 150, 80);

        campoMecanicos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ADEMIR", "CLAUDEMIR", "FABIO", "NIVALDO", "SILVIO" }));
        campoMecanicos.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                campoMecanicosItemStateChanged(evt);
            }
        });
        campoMecanicos.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
                campoMecanicosCaretPositionChanged(evt);
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
            }
        });
        campoMecanicos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                campoMecanicosKeyPressed(evt);
            }
        });
        getContentPane().add(campoMecanicos);
        campoMecanicos.setBounds(10, 490, 130, 40);

        botaoEntrarIniciall.setBackground(new java.awt.Color(0, 0, 0));
        botaoEntrarIniciall.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        botaoEntrarIniciall.setForeground(new java.awt.Color(255, 255, 255));
        botaoEntrarIniciall.setText("MOSTRAR");
        botaoEntrarIniciall.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoEntrarIniciallActionPerformed(evt);
            }
        });
        botaoEntrarIniciall.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                botaoEntrarIniciallKeyPressed(evt);
            }
        });
        getContentPane().add(botaoEntrarIniciall);
        botaoEntrarIniciall.setBounds(620, 490, 130, 40);

        tabelaDePecas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(tabelaDePecas);

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(0, 85, 770, 395);

        jLabel51.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel51.setForeground(new java.awt.Color(255, 255, 255));
        jLabel51.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel51.setText("ORÇAMENTO = ");
        getContentPane().add(jLabel51);
        jLabel51.setBounds(560, 580, 170, 40);

        jLabel52.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel52.setForeground(new java.awt.Color(255, 255, 255));
        jLabel52.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel52.setText("EXECUTADO =");
        getContentPane().add(jLabel52);
        jLabel52.setBounds(580, 560, 120, 40);

        jLabel53.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel53.setForeground(new java.awt.Color(255, 255, 255));
        jLabel53.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel53.setText("SEM CONSERTO = ");
        getContentPane().add(jLabel53);
        jLabel53.setBounds(350, 600, 180, 40);

        jLabel46.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel46.setForeground(new java.awt.Color(255, 255, 255));
        jLabel46.setText("GARANTIA INTERNA");
        getContentPane().add(jLabel46);
        jLabel46.setBounds(590, 540, 180, 40);

        jLabel45.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel45.setForeground(new java.awt.Color(255, 255, 255));
        jLabel45.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel45.setText("GARANTIA ");
        getContentPane().add(jLabel45);
        jLabel45.setBounds(330, 540, 170, 40);

        jLabel49.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel49.setForeground(new java.awt.Color(255, 255, 255));
        jLabel49.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel49.setText("EXECUTADO =");
        getContentPane().add(jLabel49);
        jLabel49.setBounds(370, 560, 110, 40);

        jLabel50.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel50.setForeground(new java.awt.Color(255, 255, 255));
        jLabel50.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel50.setText("ORÇAMENTO = ");
        getContentPane().add(jLabel50);
        jLabel50.setBounds(350, 580, 160, 40);

        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/FUNDO AMARELO.jpg"))); // NOI18N
        getContentPane().add(jLabel16);
        jLabel16.setBounds(560, 550, 5, 80);

        jLabel42.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel42.setForeground(new java.awt.Color(255, 255, 255));
        jLabel42.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel42.setText("À");
        getContentPane().add(jLabel42);
        jLabel42.setBounds(290, 490, 40, 40);

        jLabel43.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel43.setForeground(new java.awt.Color(255, 255, 255));
        jLabel43.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel43.setText("DO ANO");
        getContentPane().add(jLabel43);
        jLabel43.setBounds(460, 490, 70, 40);

        jLabel47.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel47.setForeground(new java.awt.Color(255, 255, 255));
        jLabel47.setText("ORÇAMENTO =");
        getContentPane().add(jLabel47);
        jLabel47.setBounds(160, 580, 110, 40);

        jLabel44.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel44.setForeground(new java.awt.Color(255, 255, 255));
        jLabel44.setText("NORMAL");
        getContentPane().add(jLabel44);
        jLabel44.setBounds(160, 540, 80, 40);

        jLabel54.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel54.setForeground(new java.awt.Color(255, 255, 255));
        jLabel54.setText("SEM CONSERTO =");
        getContentPane().add(jLabel54);
        jLabel54.setBounds(590, 600, 150, 40);

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 21)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setText("EXECUÇÕES CADASTRADAS");
        getContentPane().add(jLabel14);
        jLabel14.setBounds(270, 10, 340, 60);

        jLabel55.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel55.setForeground(new java.awt.Color(255, 255, 255));
        jLabel55.setText("SEM CONSERTO =");
        getContentPane().add(jLabel55);
        jLabel55.setBounds(160, 600, 150, 40);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/fundo preto.png"))); // NOI18N
        jLabel1.setMinimumSize(new java.awt.Dimension(1057, 340));
        jLabel1.setPreferredSize(new java.awt.Dimension(1057, 350));
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, 4, 780, 77);

        jLabel48.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel48.setForeground(new java.awt.Color(255, 255, 255));
        jLabel48.setText("EXECUTADO =");
        getContentPane().add(jLabel48);
        jLabel48.setBounds(160, 560, 110, 40);

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/FUNDO AMARELO.jpg"))); // NOI18N
        getContentPane().add(jLabel11);
        jLabel11.setBounds(0, -331, 780, 430);

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/RS.png"))); // NOI18N
        getContentPane().add(jLabel10);
        jLabel10.setBounds(240, 20, 570, 740);

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/RS.png"))); // NOI18N
        getContentPane().add(jLabel12);
        jLabel12.setBounds(-10, 35, 570, 810);

        acessoUser.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        acessoUser.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        acessoUser.setText("ADMIN");
        getContentPane().add(acessoUser);
        acessoUser.setBounds(520, 220, 70, 60);

        mostrarNivel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        mostrarNivel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        mostrarNivel.setText("5");
        getContentPane().add(mostrarNivel);
        mostrarNivel.setBounds(520, 130, 50, 70);

        setSize(new java.awt.Dimension(775, 684));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    int comp1=0,comp2=0,x=0;
    private void pegaNE(){
        String sqlnome = "SELECT * FROM exec_of2 where TIPO_DE_ORDEM= ? AND SERVIÇO=? AND MECÂNICO =? AND COMP >= ? AND COMP <= ? AND ANO = ?";
        try {
            pst = conexao.prepareStatement(sqlnome);
            pst.setString(1, "NORMAL");
            pst.setString(2, "EXECUTADO");
            pst.setString(3, campoMecanicos.getSelectedItem().toString());
            pst.setInt(4, comp1);
            pst.setInt(5, comp2);
            pst.setInt(6, Integer.parseInt(dataAno1.getValue().toString()));
            rs = pst.executeQuery();
            x=0;
            while (rs.next()) {
                if(rs.getString(7).equals("NORMAL")&&rs.getString(2).equals("EXECUTADO")){
                    x++;
                }
            }
            quantNormalExecutado.setText(Integer.toString(x));
            pegaNO();
        } catch (Exception e) {
        }
    }
    private void pegaNO(){
        String sqlnome = "SELECT * FROM exec_of2 where TIPO_DE_ORDEM= ? AND SERVIÇO=? AND MECÂNICO =? AND COMP >= ? AND COMP <= ? AND ANO = ?";
        try {
            pst = conexao.prepareStatement(sqlnome);
            pst.setString(1, "NORMAL");
            pst.setString(2, "ORÇAMENTO");
            pst.setString(3, campoMecanicos.getSelectedItem().toString());
            pst.setInt(4, comp1);
            pst.setInt(5, comp2);
            pst.setInt(6, Integer.parseInt(dataAno1.getValue().toString()));
            rs = pst.executeQuery();
            x=0;
            while (rs.next()) {
                if(rs.getString(7).equals("NORMAL")&&rs.getString(2).equals("ORÇAMENTO")){
                    x++;
                }
            }
            quantNormalOrcamento.setText(Integer.toString(x));
            pegaNS();
        } catch (Exception e) {
        }
    }
    private void pegaNS(){
        String sqlnome = "SELECT * FROM exec_of2 where TIPO_DE_ORDEM= ? AND SERVIÇO=? AND MECÂNICO =? AND COMP >= ? AND COMP <= ? AND ANO = ?";
        try {
            pst = conexao.prepareStatement(sqlnome);
            pst.setString(1, "NORMAL");
            pst.setString(2, "SEM CONSERTO");
            pst.setString(3, campoMecanicos.getSelectedItem().toString());
            pst.setInt(4, comp1);
            pst.setInt(5, comp2);
            pst.setInt(6, Integer.parseInt(dataAno1.getValue().toString()));
            rs = pst.executeQuery();
            x=0;
            while (rs.next()) {
                if(rs.getString(7).equals("NORMAL")&&rs.getString(2).equals("SEM CONSERTO")){
                    x++;
                }
            }
            quantNormalSemConserto.setText(Integer.toString(x));
            pegaGE();
        } catch (Exception e) {
        }
    }
    private void pegaGE(){
        String sqlnome = "SELECT * FROM exec_of2 where TIPO_DE_ORDEM= ? AND SERVIÇO=? AND MECÂNICO =? AND COMP >= ? AND COMP <= ? AND ANO = ?";
        try {
            pst = conexao.prepareStatement(sqlnome);
            pst.setString(1, "GARANTIA");
            pst.setString(2, "EXECUTADO");
            pst.setString(3, campoMecanicos.getSelectedItem().toString());
            pst.setInt(4, comp1);
            pst.setInt(5, comp2);
            pst.setInt(6, Integer.parseInt(dataAno1.getValue().toString()));
            rs = pst.executeQuery();
            x=0;
            while (rs.next()) {
                if(rs.getString(7).equals("GARANTIA")&&rs.getString(2).equals("EXECUTADO")){
                    x++;
                }
            }
            quantGarantiaExecutado.setText(Integer.toString(x));
            pegaGO();
        } catch (Exception e) {
        }
    }
    private void pegaGO(){
        String sqlnome = "SELECT * FROM exec_of2 where TIPO_DE_ORDEM= ? AND SERVIÇO=? AND MECÂNICO =? AND COMP >= ? AND COMP <= ? AND ANO = ?";
        try {
            pst = conexao.prepareStatement(sqlnome);
            pst.setString(1, "GARANTIA");
            pst.setString(2, "ORÇAMENTO");
            pst.setString(3, campoMecanicos.getSelectedItem().toString());
            pst.setInt(4, comp1);
            pst.setInt(5, comp2);
            pst.setInt(6, Integer.parseInt(dataAno1.getValue().toString()));
            rs = pst.executeQuery();
            x=0;
            while (rs.next()) {
                if(rs.getString(7).equals("GARANTIA")&&rs.getString(2).equals("ORÇAMENTO")){
                    x++;
                }
            }
            quantGarantiaOrcamento.setText(Integer.toString(x));
            pegaGS();
        } catch (Exception e) {
        }
    }
    private void pegaGS(){
        String sqlnome = "SELECT * FROM exec_of2 where TIPO_DE_ORDEM= ? AND SERVIÇO=? AND MECÂNICO =? AND COMP >= ? AND COMP <= ? AND ANO = ?";
        try {
            pst = conexao.prepareStatement(sqlnome);
            pst.setString(1, "GARANTIA");
            pst.setString(2, "SEM CONSERTO");
            pst.setString(3, campoMecanicos.getSelectedItem().toString());
            pst.setInt(4, comp1);
            pst.setInt(5, comp2);
            pst.setInt(6, Integer.parseInt(dataAno1.getValue().toString()));
            rs = pst.executeQuery();
            x=0;
            while (rs.next()) {
                if(rs.getString(7).equals("GARANTIA")&&rs.getString(2).equals("SEM CONSERTO")){
                    x++;
                }
            }
            quantGarantiaSemConserto.setText(Integer.toString(x));
            pegaGIE();
        } catch (Exception e) {
        }
    }
    private void pegaGIE(){
        String sqlnome = "SELECT * FROM exec_of2 where TIPO_DE_ORDEM= ? AND SERVIÇO=? AND MECÂNICO =? AND COMP >= ? AND COMP <= ? AND ANO = ?";
        try {
            pst = conexao.prepareStatement(sqlnome);
            pst.setString(1, "GARANTIA INTERNA");
            pst.setString(2, "EXECUTADO");
            pst.setString(3, campoMecanicos.getSelectedItem().toString());
            pst.setInt(4, comp1);
            pst.setInt(5, comp2);
            pst.setInt(6, Integer.parseInt(dataAno1.getValue().toString()));
            rs = pst.executeQuery();
            x=0;
            while (rs.next()) {
                if(rs.getString(7).equals("GARANTIA INTERNA")&&rs.getString(2).equals("EXECUTADO")){
                    x++;
                }
            }
            quantGarantiaInternaExecutado.setText(Integer.toString(x));
            pegaGIO();
        } catch (Exception e) {
        }
    }
    private void pegaGIO(){
        String sqlnome = "SELECT * FROM exec_of2 where TIPO_DE_ORDEM= ? AND SERVIÇO=? AND MECÂNICO =? AND COMP >= ? AND COMP <= ? AND ANO = ?";
        try {
            pst = conexao.prepareStatement(sqlnome);
            pst.setString(1, "GARANTIA INTERNA");
            pst.setString(2, "ORÇAMENTO");
            pst.setString(3, campoMecanicos.getSelectedItem().toString());
            pst.setInt(4, comp1);
            pst.setInt(5, comp2);
            pst.setInt(6, Integer.parseInt(dataAno1.getValue().toString()));
            rs = pst.executeQuery();
            x=0;
            while (rs.next()) {
                if(rs.getString(7).equals("GARANTIA INTERNA")&&rs.getString(2).equals("ORÇAMENTO")){
                    x++;
                }
            }
            quantGarantiaInternaOrcamento.setText(Integer.toString(x));
            pegaGIS();
        } catch (Exception e) {
        }
    }
    private void pegaGIS(){
        String sqlnome = "SELECT * FROM exec_of2 where TIPO_DE_ORDEM= ? AND SERVIÇO=? AND MECÂNICO =? AND COMP >= ? AND COMP <= ? AND ANO = ?";
        try {
            pst = conexao.prepareStatement(sqlnome);
            pst.setString(1, "GARANTIA INTERNA");
            pst.setString(2, "SEM CONSERTO");
            pst.setString(3, campoMecanicos.getSelectedItem().toString());
            pst.setInt(4, comp1);
            pst.setInt(5, comp2);
            pst.setInt(6, Integer.parseInt(dataAno1.getValue().toString()));
            rs = pst.executeQuery();
            x=0;
            while (rs.next()) {
                if(rs.getString(7).equals("GARANTIA INTERNA")&&rs.getString(2).equals("SEM CONSERTO")){
                    x++;
                }
            }
            quantGarantiaInternaSemConserto.setText(Integer.toString(x));
        } catch (Exception e) {
        }
    }
    private void pesquisarServico(){
        String sql = "select os_aux as OS,APARELHO,TIPO_DE_ORDEM,SERVIÇO,HORA_INICIAL,HORA_FINAL,DURAÇÃO,DIA from exec_of2 where MECÂNICO =? AND COMP >= ? AND COMP <= ? AND ANO = ? AND TIPO_DE_ORDEM = ?";
        try {
            pst = conexao.prepareStatement(sql);
            pst.setString(1, campoMecanicos.getSelectedItem().toString());
            int pass1=Integer.parseInt(dataMes1.getValue().toString());
            if(pass1==1){
                comp1=Integer.parseInt(dataDia1.getValue().toString());
            }
            else if(pass1==2){
                comp1=Integer.parseInt(dataDia1.getValue().toString())+31;
            }
            else if(pass1==3){
                comp1=Integer.parseInt(dataDia1.getValue().toString())+59;
            }
            else if(pass1==4){
                comp1=Integer.parseInt(dataDia1.getValue().toString())+90;
            }
            else if(pass1==5){
                comp1=Integer.parseInt(dataDia1.getValue().toString())+120;
            }
            else if(pass1==6){
                comp1=Integer.parseInt(dataDia1.getValue().toString())+151;
            }
            else if(pass1==7){
                comp1=Integer.parseInt(dataDia1.getValue().toString())+181;
            }
            else if(pass1==8){
                comp1=Integer.parseInt(dataDia1.getValue().toString())+212;
            }
            else if(pass1==9){
                comp1=Integer.parseInt(dataDia1.getValue().toString())+243;
            }
            else if(pass1==10){
                comp1=Integer.parseInt(dataDia1.getValue().toString())+273;
            }
            else if(pass1==11){
                comp1=Integer.parseInt(dataDia1.getValue().toString())+304;
            }
            else if(pass1==12){
                comp1=Integer.parseInt(dataDia1.getValue().toString())+334;
            }
            int pass2=Integer.parseInt(dataMes2.getValue().toString());
            if(pass2==1){
                comp2=Integer.parseInt(dataDia2.getValue().toString());
            }
            else if(pass2==2){
                comp2=Integer.parseInt(dataDia2.getValue().toString())+31;
            }
            else if(pass2==3){
                comp2=Integer.parseInt(dataDia2.getValue().toString())+59;
            }
            else if(pass2==4){
                comp2=Integer.parseInt(dataDia2.getValue().toString())+90;
            }
            else if(pass2==5){
                comp2=Integer.parseInt(dataDia2.getValue().toString())+120;
            }
            else if(pass2==6){
                comp2=Integer.parseInt(dataDia2.getValue().toString())+151;
            }
            else if(pass2==7){
                comp2=Integer.parseInt(dataDia2.getValue().toString())+181;
            }
            else if(pass2==8){
                comp2=Integer.parseInt(dataDia2.getValue().toString())+212;
            }
            else if(pass2==9){
                comp2=Integer.parseInt(dataDia2.getValue().toString())+243;
            }
            else if(pass2==10){
                comp2=Integer.parseInt(dataDia2.getValue().toString())+273;
            }
            else if(pass2==11){
                comp2=Integer.parseInt(dataDia2.getValue().toString())+304;
            }
            else if(pass2==12){
                comp2=Integer.parseInt(dataDia2.getValue().toString())+334;
            }
            pst.setInt(2, comp1);
            pst.setInt(3, comp2);
            pst.setInt(4, Integer.parseInt(dataAno1.getValue().toString()));
            pst.setString(5, servicos.getSelectedItem().toString());
            rs=pst.executeQuery();
            tabelaDePecas.setModel(DbUtils.resultSetToTableModel(rs));
            pegaNE();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null,e);
        }
    }
    private void pesquisar(){
        String sql = "select os_aux as OS,APARELHO,TIPO_DE_ORDEM,SERVIÇO,HORA_INICIAL,HORA_FINAL,DURAÇÃO,DIA from exec_of2 where MECÂNICO =? AND COMP >= ? AND COMP <= ? AND ANO = ?";
        try {
            pst = conexao.prepareStatement(sql);
            pst.setString(1, campoMecanicos.getSelectedItem().toString());
            int pass1=Integer.parseInt(dataMes1.getValue().toString());
            if(pass1==1){
                comp1=Integer.parseInt(dataDia1.getValue().toString());
            }
            else if(pass1==2){
                comp1=Integer.parseInt(dataDia1.getValue().toString())+31;
            }
            else if(pass1==3){
                comp1=Integer.parseInt(dataDia1.getValue().toString())+59;
            }
            else if(pass1==4){
                comp1=Integer.parseInt(dataDia1.getValue().toString())+90;
            }
            else if(pass1==5){
                comp1=Integer.parseInt(dataDia1.getValue().toString())+120;
            }
            else if(pass1==6){
                comp1=Integer.parseInt(dataDia1.getValue().toString())+151;
            }
            else if(pass1==7){
                comp1=Integer.parseInt(dataDia1.getValue().toString())+181;
            }
            else if(pass1==8){
                comp1=Integer.parseInt(dataDia1.getValue().toString())+212;
            }
            else if(pass1==9){
                comp1=Integer.parseInt(dataDia1.getValue().toString())+243;
            }
            else if(pass1==10){
                comp1=Integer.parseInt(dataDia1.getValue().toString())+273;
            }
            else if(pass1==11){
                comp1=Integer.parseInt(dataDia1.getValue().toString())+304;
            }
            else if(pass1==12){
                comp1=Integer.parseInt(dataDia1.getValue().toString())+334;
            }
            int pass2=Integer.parseInt(dataMes2.getValue().toString());
            if(pass2==1){
                comp2=Integer.parseInt(dataDia2.getValue().toString());
            }
            else if(pass2==2){
                comp2=Integer.parseInt(dataDia2.getValue().toString())+31;
            }
            else if(pass2==3){
                comp2=Integer.parseInt(dataDia2.getValue().toString())+59;
            }
            else if(pass2==4){
                comp2=Integer.parseInt(dataDia2.getValue().toString())+90;
            }
            else if(pass2==5){
                comp2=Integer.parseInt(dataDia2.getValue().toString())+120;
            }
            else if(pass2==6){
                comp2=Integer.parseInt(dataDia2.getValue().toString())+151;
            }
            else if(pass2==7){
                comp2=Integer.parseInt(dataDia2.getValue().toString())+181;
            }
            else if(pass2==8){
                comp2=Integer.parseInt(dataDia2.getValue().toString())+212;
            }
            else if(pass2==9){
                comp2=Integer.parseInt(dataDia2.getValue().toString())+243;
            }
            else if(pass2==10){
                comp2=Integer.parseInt(dataDia2.getValue().toString())+273;
            }
            else if(pass2==11){
                comp2=Integer.parseInt(dataDia2.getValue().toString())+304;
            }
            else if(pass2==12){
                comp2=Integer.parseInt(dataDia2.getValue().toString())+334;
            }
            pst.setInt(2, comp1);
            pst.setInt(3, comp2);
            pst.setInt(4, Integer.parseInt(dataAno1.getValue().toString()));
            rs=pst.executeQuery();
            tabelaDePecas.setModel(DbUtils.resultSetToTableModel(rs));
            pegaNE();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null,e);
        }
    }
    public void setar(){
        int setar=tabelaDePecas.getSelectedRow();
        ExecucoesDosMecanicos execu = new ExecucoesDosMecanicos();
        execu.setVisible(true);
        execu.campoOS.setText(tabelaDePecas.getModel().getValueAt(setar,0).toString());
        execu.campoTipoDaOs.setText(tabelaDePecas.getModel().getValueAt(setar,2).toString());//
        execu.campoServico.setText(tabelaDePecas.getModel().getValueAt(setar,3).toString());//
        execu.campoHoraInicial.setText(tabelaDePecas.getModel().getValueAt(setar,4).toString());
        execu.campoHoraFinal.setText(tabelaDePecas.getModel().getValueAt(setar,5).toString());
        execu.campoDuracao.setText(tabelaDePecas.getModel().getValueAt(setar,6).toString());
        execu.campoMecanico.setText(campoMecanicos.getSelectedItem().toString());
        execu.campoData.setText(tabelaDePecas.getModel().getValueAt(setar,7).toString());
        execu.mostrarNivel.setText(mostrarNivel.getText());
        execu.acessoUser.setText(acessoUser.getText());
    }
    private void botaoEntrarIniciallActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoEntrarIniciallActionPerformed
        setar();
    }//GEN-LAST:event_botaoEntrarIniciallActionPerformed

    private void botaoEntrarIniciallKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_botaoEntrarIniciallKeyPressed
        if(evt.getKeyCode() == evt.VK_ENTER){
            setar();
        }
    }//GEN-LAST:event_botaoEntrarIniciallKeyPressed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        nivel=Integer.parseInt(mostrarNivel.getText());
        acesso=acessoUser.getText();
        if(servicos.getSelectedItem().toString().equals("TODOS")){
            pesquisar();
        }
        else{
            pesquisarServico();
        }
        if(y==0){
            y++;
            dataDia2.setValue(31);
            dataMes2.setValue(12);
            dataAno1.setValue(20);
        }
    }//GEN-LAST:event_formWindowActivated

    private void campoMecanicosKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_campoMecanicosKeyPressed
        if(evt.getKeyCode() == evt.VK_ENTER){
            pesquisar();
        }
    }//GEN-LAST:event_campoMecanicosKeyPressed

    private void campoMecanicosCaretPositionChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_campoMecanicosCaretPositionChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_campoMecanicosCaretPositionChanged

    private void campoMecanicosItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_campoMecanicosItemStateChanged
        if(servicos.getSelectedItem().toString().equals("TODOS")){
            pesquisar();
        }
        else{
            pesquisarServico();
        }
    }//GEN-LAST:event_campoMecanicosItemStateChanged

    private void dataDia1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dataDia1KeyPressed
        if(evt.getKeyCode() == evt.VK_ENTER){
            dataMes1.requestFocus();
        }
    }//GEN-LAST:event_dataDia1KeyPressed

    private void dataDia1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dataDia1KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_dataDia1KeyTyped

    private void dataMes1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dataMes1KeyPressed
        if(evt.getKeyCode() == evt.VK_ENTER){
            dataAno1.requestFocus();
        }
    }//GEN-LAST:event_dataMes1KeyPressed

    private void dataAno1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dataAno1KeyPressed
        if(evt.getKeyCode() == evt.VK_ENTER){
            campoMecanicos.requestFocus();
        }
    }//GEN-LAST:event_dataAno1KeyPressed

    private void dataMes2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dataMes2KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_dataMes2KeyPressed

    private void dataDia2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dataDia2KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_dataDia2KeyPressed

    private void dataDia2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dataDia2KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_dataDia2KeyTyped

    private void dataDia1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_dataDia1StateChanged
        if(servicos.getSelectedItem().toString().equals("TODOS")){
            pesquisar();
        }
        else{
            pesquisarServico();
        }
    }//GEN-LAST:event_dataDia1StateChanged

    private void dataMes1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_dataMes1StateChanged
        if(servicos.getSelectedItem().toString().equals("TODOS")){
            pesquisar();
        }
        else{
            pesquisarServico();
        }
    }//GEN-LAST:event_dataMes1StateChanged

    private void dataAno1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_dataAno1StateChanged
        if(servicos.getSelectedItem().toString().equals("TODOS")){
            pesquisar();
        }
        else{
            pesquisarServico();
        }
    }//GEN-LAST:event_dataAno1StateChanged

    private void dataDia2StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_dataDia2StateChanged
        if(servicos.getSelectedItem().toString().equals("TODOS")){
            pesquisar();
        }
        else{
            pesquisarServico();
        }
    }//GEN-LAST:event_dataDia2StateChanged

    private void dataMes2StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_dataMes2StateChanged
        if(servicos.getSelectedItem().toString().equals("TODOS")){
            pesquisar();
        }
        else{
            pesquisarServico();
        }
    }//GEN-LAST:event_dataMes2StateChanged

    private void servicosItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_servicosItemStateChanged
        if(servicos.getSelectedItem().toString().equals("TODOS")){
            pesquisar();
        }
        else{
            pesquisarServico();
        }
    }//GEN-LAST:event_servicosItemStateChanged

    private void servicosCaretPositionChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_servicosCaretPositionChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_servicosCaretPositionChanged

    private void servicosKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_servicosKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_servicosKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TodasAsExecucoes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TodasAsExecucoes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TodasAsExecucoes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TodasAsExecucoes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TodasAsExecucoes().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JLabel acessoUser;
    private javax.swing.JButton botaoEntrarIniciall;
    private javax.swing.JComboBox<String> campoMecanicos;
    private javax.swing.JSpinner dataAno1;
    private javax.swing.JSpinner dataDia1;
    private javax.swing.JSpinner dataDia2;
    private javax.swing.JSpinner dataMes1;
    private javax.swing.JSpinner dataMes2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane2;
    public static javax.swing.JLabel mostrarNivel;
    private javax.swing.JLabel quantGarantiaExecutado;
    private javax.swing.JLabel quantGarantiaInternaExecutado;
    private javax.swing.JLabel quantGarantiaInternaOrcamento;
    private javax.swing.JLabel quantGarantiaInternaSemConserto;
    private javax.swing.JLabel quantGarantiaOrcamento;
    private javax.swing.JLabel quantGarantiaSemConserto;
    private javax.swing.JLabel quantNormalExecutado;
    private javax.swing.JLabel quantNormalOrcamento;
    private javax.swing.JLabel quantNormalSemConserto;
    private javax.swing.JComboBox<String> servicos;
    private javax.swing.JTable tabelaDePecas;
    // End of variables declaration//GEN-END:variables
}
